services:
  web-producer:
    build:
      context: ./producer
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
      - "5005:5005"
    environment:
      - JAVA_TOOL_OPTIONS=-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5005
      - SPRING_DATA_MONGODB_URI=mongodb://root:rootPw@mongodb:27017/admin
    depends_on:
      - kafka
      - mongodb
    restart: always

  web-consumer:
    build:
      context: ./consumer
      dockerfile: Dockerfile
    ports:
      - "8082:8080"
      - "5006:5006"
    environment:
      - JAVA_TOOL_OPTIONS=-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5006
      - SPRING_DATA_MONGODB_URI=mongodb://root:rootPw@mongodb:27017/admin
    depends_on:
      - kafka
      - mongodb
      - web-producer
    restart: always

  zookeeper:
    image: zookeeper:3.7.0
    ports: ["2181:2181"]

  kafka:
    image: wurstmeister/kafka:2.12-2.5.0
    ports:
      - "9092:9092"
      - "19092:19092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,PLAINTEXT_INTERNAL://0.0.0.0:19092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_INTERNAL://localhost:19092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  #kafka-web-ui:
  #  image: tchiotludo/akhq:0.17.0
  #  ports: ["8081:8080"]
  #  depends_on: [kafka]
  #  environment:
  #    AKHQ_CONFIGURATION: |
  #      akhq.connections.docker-kafka-server.properties.bootstrap.servers: kafka:9092
  #      akhq.connections.docker-kafka-server.properties.request.timeout.ms: 30000

  mongodb:
    image: mongo:latest
    container_name: mongodb
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: rootPw
      MONGO_INITDB_DATABASE: admin
    volumes:
      - mongodb-data:/data/db

volumes:
  mongodb-data: